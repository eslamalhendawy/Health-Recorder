if (chronicDisease === "" || mChronicDisease === "") {
      await axios
        .post(url, {
          fristName: appState.patient1.firstName,
          lastName: appState.patient1.lastName,
          age: appState.patient1.age,
          bloodType: appState.patient1.bloodType,
          gender: appState.patient1.gender,
          email: appState.patient1.email,
          password: appState.patient1.password,
          phoneNumber: appState.patient1.phoneNumber,
          National_ID: appState.patient1.nationalID,
          Health_problems: [{ name: healthProblems, medicen: mHealthProblems }],
          Hereditary_diseases: [{ name: genetic, medicen: geneticMed }],
          Surgical_operations: [{ name: surgery, date: surgeryDate }],
        })
        .then((res) => {
          console.log(res);
        });
    } else if ((chronicDisease === "" || (mChronicDisease === "") && (healthProblems === "") || mHealthProblems === "")) {
      await axios
        .post(url, {
          fristName: appState.patient1.firstName,
          lastName: appState.patient1.lastName,
          age: appState.patient1.age,
          bloodType: appState.patient1.bloodType,
          gender: appState.patient1.gender,
          email: appState.patient1.email,
          password: appState.patient1.password,
          phoneNumber: appState.patient1.phoneNumber,
          National_ID: appState.patient1.nationalID,
          Hereditary_diseases: [{ name: genetic, medicen: geneticMed }],
          Surgical_operations: [{ name: surgery, date: surgeryDate }],
        })
        .then((res) => {
          console.log(res);
        });
    } else if((chronicDisease === "" || mChronicDisease === "") && (genetic === "" || geneticMed === "")) {
      await axios
        .post(url, {
          fristName: appState.patient1.firstName,
          lastName: appState.patient1.lastName,
          age: appState.patient1.age,
          bloodType: appState.patient1.bloodType,
          gender: appState.patient1.gender,
          email: appState.patient1.email,
          password: appState.patient1.password,
          phoneNumber: appState.patient1.phoneNumber,
          National_ID: appState.patient1.nationalID,
          Health_problems: [{ name: healthProblems, medicen: mHealthProblems }],
          Surgical_operations: [{ name: surgery, date: surgeryDate }],
        })
        .then((res) => {
          console.log(res);
        });
    } else if ((chronicDisease === "" || mChronicDisease) === "" && (surgery === "" || surgeryDate === "")) {
      await axios
        .post(url, {
          fristName: appState.patient1.firstName,
          lastName: appState.patient1.lastName,
          age: appState.patient1.age,
          bloodType: appState.patient1.bloodType,
          gender: appState.patient1.gender,
          email: appState.patient1.email,
          password: appState.patient1.password,
          phoneNumber: appState.patient1.phoneNumber,
          National_ID: appState.patient1.nationalID,
          Health_problems: [{ name: healthProblems, medicen: mHealthProblems }],
          Hereditary_diseases: [{ name: genetic, medicen: geneticMed }],
        })
        .then((res) => {
          console.log(res);
        });
    }else if(healthProblems === "" || mHealthProblems) {
      await axios
      .post(url, {
        fristName: appState.patient1.firstName,
        lastName: appState.patient1.lastName,
        age: appState.patient1.age,
        bloodType: appState.patient1.bloodType,
        gender: appState.patient1.gender,
        email: appState.patient1.email,
        password: appState.patient1.password,
        phoneNumber: appState.patient1.phoneNumber,
        National_ID: appState.patient1.nationalID,
        chronic_Diseases: [{ name: chronicDisease, medicen: mChronicDisease }],
        Hereditary_diseases: [{ name: genetic, medicen: geneticMed }],
        Surgical_operations: [{ name: surgery, date: surgeryDate }],
      })
      .then((res) => {
        console.log(res);
      });
    }else if((healthProblems === "" || mHealthProblems ) && (genetic === "" || geneticMed ==="")) {
      await axios
      .post(url, {
        fristName: appState.patient1.firstName,
        lastName: appState.patient1.lastName,
        age: appState.patient1.age,
        bloodType: appState.patient1.bloodType,
        gender: appState.patient1.gender,
        email: appState.patient1.email,
        password: appState.patient1.password,
        phoneNumber: appState.patient1.phoneNumber,
        National_ID: appState.patient1.nationalID,
        chronic_Diseases: [{ name: chronicDisease, medicen: mChronicDisease }],
        Surgical_operations: [{ name: surgery, date: surgeryDate }],
      })
      .then((res) => {
        console.log(res);
      });
    }